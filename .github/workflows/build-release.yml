name: Build and Release Executable

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0, v1.1.0)
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Installed packages:"
        pip list
        echo "Python version:"
        python --version
        
    - name: Build executable
      run: |
        echo "Starting build process..."
        python build_exe.py
        echo "Build completed. Checking dist directory contents:"
        dir dist
        echo "Checking if executable exists:"
        if (Test-Path "dist/GymkhanaVideoAnalyzer.exe") { 
          echo "[OK] Executable found!" 
          echo "Executable size:"
          Get-ChildItem "dist/GymkhanaVideoAnalyzer.exe" | Select-Object Name, Length
        } else { 
          echo "[ERROR] Executable not found!" 
          echo "Build failed or executable was not created"
          exit 1
        }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: GymkhanaVideoAnalyzer-Windows
        path: dist/
        
    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## What's New in ${{ github.ref_name }}
          
          This release includes the Gymkhana Video Analyzer executable and package.
          
          ### Downloads
          - **Executable**: GymkhanaVideoAnalyzer.exe
          - **Package**: GymkhanaVideoAnalyzer-Windows.zip
          
          ### Installation
          1. Download the package
          2. Extract the ZIP file
          3. Run GymkhanaVideoAnalyzer.exe
        draft: false
        prerelease: false
        
    - name: Debug Release Output
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "Release step outputs:"
        echo "upload_url: ${{ steps.create_release.outputs.upload_url }}"
        echo "id: ${{ steps.create_release.outputs.id }}"
        echo "html_url: ${{ steps.create_release.outputs.html_url }}"
        
    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/') && steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/GymkhanaVideoAnalyzer.exe
        asset_name: GymkhanaVideoAnalyzer.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Release Package
      if: startsWith(github.ref, 'refs/tags/') && steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/GymkhanaVideoAnalyzer-Windows.zip
        asset_name: GymkhanaVideoAnalyzer-Windows.zip
        asset_content_type: application/zip
